{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KalderAA\\\\task\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport TaskInput from './TaskInput';\nimport TaskItem from './TaskItem';\nimport './App.css'; // Для общих стилей\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // Состояние для списка задач\n  const [tasks, setTasks] = useState([]);\n\n  // Состояние для ввода текста новой задачи\n  const [taskInput, setTaskInput] = useState('');\n\n  // Состояние для ввода дедлайна новой задачи\n  const [deadlineInput, setDeadlineInput] = useState('');\n\n  // Функция для добавления новой задачи\n  const addTask = () => {\n    if (taskInput.trim() === '') {\n      alert('Введите текст задачи!');\n      return;\n    }\n    const newTask = {\n      id: Date.now(),\n      // Уникальный идентификатор задачи\n      text: taskInput,\n      deadline: deadlineInput || null,\n      // Если дедлайн не указан, оставляем null\n      completed: false // Задача по умолчанию не выполнена\n    };\n    setTasks([...tasks, newTask]); // Добавляем новую задачу в список\n    setTaskInput(''); // Очищаем поле ввода текста\n    setDeadlineInput(''); // Очищаем поле ввода дедлайна\n  };\n\n  // Функция для переключения состояния выполнения задачи\n  const toggleTaskCompletion = taskId => {\n    setTasks(tasks.map(task => task.id === taskId ? {\n      ...task,\n      completed: !task.completed\n    } : task));\n  };\n\n  // Функция для удаления задачи\n  const deleteTask = taskId => {\n    setTasks(tasks.filter(task => task.id !== taskId));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u0437\\u0430\\u0434\\u0430\\u0447\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TaskInput, {\n      taskInput: taskInput,\n      deadlineInput: deadlineInput,\n      handleInputChange: e => setTaskInput(e.target.value),\n      handleDeadlineChange: e => setDeadlineInput(e.target.value),\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"task-list\",\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(TaskItem, {\n        task: task,\n        toggleTaskCompletion: toggleTaskCompletion,\n        deleteTask: deleteTask\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"tdQicyssE21TtFHSIF2bkRJ8+UI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","TaskInput","TaskItem","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","taskInput","setTaskInput","deadlineInput","setDeadlineInput","addTask","trim","alert","newTask","id","Date","now","text","deadline","completed","toggleTaskCompletion","taskId","map","task","deleteTask","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","handleInputChange","e","target","value","handleDeadlineChange","_c","$RefreshReg$"],"sources":["C:/Users/KalderAA/task/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport TaskInput from './TaskInput';\nimport TaskItem from './TaskItem';\nimport './App.css'; // Для общих стилей\n\nconst App = () => {\n    // Состояние для списка задач\n    const [tasks, setTasks] = useState([]);\n\n    // Состояние для ввода текста новой задачи\n    const [taskInput, setTaskInput] = useState('');\n\n    // Состояние для ввода дедлайна новой задачи\n    const [deadlineInput, setDeadlineInput] = useState('');\n\n    // Функция для добавления новой задачи\n    const addTask = () => {\n        if (taskInput.trim() === '') {\n            alert('Введите текст задачи!');\n            return;\n        }\n\n        const newTask = {\n            id: Date.now(), // Уникальный идентификатор задачи\n            text: taskInput,\n            deadline: deadlineInput || null, // Если дедлайн не указан, оставляем null\n            completed: false, // Задача по умолчанию не выполнена\n        };\n\n        setTasks([...tasks, newTask]); // Добавляем новую задачу в список\n        setTaskInput(''); // Очищаем поле ввода текста\n        setDeadlineInput(''); // Очищаем поле ввода дедлайна\n    };\n\n    // Функция для переключения состояния выполнения задачи\n    const toggleTaskCompletion = (taskId) => {\n        setTasks(tasks.map(task =>\n            task.id === taskId ? { ...task, completed: !task.completed } : task\n        ));\n    };\n\n    // Функция для удаления задачи\n    const deleteTask = (taskId) => {\n        setTasks(tasks.filter(task => task.id !== taskId));\n    };\n\n    return (\n        <div className=\"app\">\n            <h1>Список задач</h1>\n\n            {/* Компонент для ввода новой задачи */}\n            <TaskInput\n                taskInput={taskInput}\n                deadlineInput={deadlineInput}\n                handleInputChange={(e) => setTaskInput(e.target.value)}\n                handleDeadlineChange={(e) => setDeadlineInput(e.target.value)}\n                addTask={addTask}\n            />\n\n            {/* Список задач */}\n            <ul className=\"task-list\">\n                {tasks.map((task) => (\n                    <TaskItem\n                        key={task.id}\n                        task={task}\n                        toggleTaskCompletion={toggleTaskCompletion}\n                        deleteTask={deleteTask}\n                    />\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}