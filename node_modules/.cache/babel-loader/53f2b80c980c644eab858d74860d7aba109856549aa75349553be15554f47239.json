{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KalderAA\\\\ProjectInfoBez\\\\src\\\\components\\\\PersonalTasks.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport TaskInput from './TaskInput';\nimport TaskList from './TaskList';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PersonalTasks = () => {\n  _s();\n  const [tasks, setTasks] = useState([]); // Состояние для хранения списка задач\n  const [taskInput, setTaskInput] = useState(''); // Состояние для хранения текста новой задачи\n  const [deadlineInput, setDeadlineInput] = useState(''); // Состояние для хранения дедлайна новой задачи\n\n  // Обработчик изменения текста в поле ввода задачи\n  const handleInputChange = e => {\n    setTaskInput(e.target.value); // Обновляем состояние taskInput на основе ввода пользователя\n  };\n\n  // Обработчик изменения даты в поле ввода дедлайна\n  const handleDeadlineChange = e => {\n    setDeadlineInput(e.target.value); // Обновляем состояние deadlineInput на основе ввода пользователя\n  };\n\n  // Функция добавления новой задачи\n  const addTask = () => {\n    if (taskInput.trim()) {\n      // Проверяем, что введенный текст не пустой\n      setTasks([...tasks, {\n        id: Date.now(),\n        text: taskInput,\n        deadline: deadlineInput || 'Без дедлайна',\n        // Если дедлайн не указан, устанавливаем значение по умолчанию\n        completed: false\n      }]); // Добавляем новую задачу в список\n      setTaskInput(''); // Очищаем поле ввода задачи после добавления\n      setDeadlineInput(''); // Очищаем поле ввода дедлайна после добавления\n    }\n  };\n\n  // Функция переключения состояния завершения задачи\n  const toggleTaskCompletion = id => {\n    setTasks(tasks.map(task => task.id === id ? {\n      ...task,\n      completed: !task.completed\n    } : task // Меняем состояние completed для выбранной задачи\n    ));\n  };\n\n  // Функция удаления задачи из списка\n  const deleteTask = id => {\n    setTasks(tasks.filter(task => task.id !== id)); // Фильтруем задачи, оставляя только те, которые не были удалены\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u042D\\u0442\\u043E \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0430 \\u043B\\u0438\\u0447\\u043D\\u044B\\u0445 \\u0437\\u0430\\u0434\\u0430\\u043D\\u0438\\u0439\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TaskInput, {\n      taskInput: taskInput,\n      deadlineInput: deadlineInput,\n      handleInputChange: handleInputChange,\n      handleDeadlineChange: handleDeadlineChange,\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n      tasks: tasks,\n      toggleTaskCompletion: toggleTaskCompletion,\n      deleteTask: deleteTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(PersonalTasks, \"tdQicyssE21TtFHSIF2bkRJ8+UI=\");\n_c = PersonalTasks;\nexport default PersonalTasks;\nvar _c;\n$RefreshReg$(_c, \"PersonalTasks\");","map":{"version":3,"names":["React","useState","TaskInput","TaskList","jsxDEV","_jsxDEV","Fragment","_Fragment","PersonalTasks","_s","tasks","setTasks","taskInput","setTaskInput","deadlineInput","setDeadlineInput","handleInputChange","e","target","value","handleDeadlineChange","addTask","trim","id","Date","now","text","deadline","completed","toggleTaskCompletion","map","task","deleteTask","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/KalderAA/ProjectInfoBez/src/components/PersonalTasks.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport TaskInput from './TaskInput';\r\nimport TaskList from './TaskList';\r\n\r\nconst PersonalTasks = () => {\r\n    const [tasks, setTasks] = useState([]); // Состояние для хранения списка задач\r\n    const [taskInput, setTaskInput] = useState(''); // Состояние для хранения текста новой задачи\r\n    const [deadlineInput, setDeadlineInput] = useState(''); // Состояние для хранения дедлайна новой задачи\r\n\r\n    // Обработчик изменения текста в поле ввода задачи\r\n    const handleInputChange = (e) => {\r\n        setTaskInput(e.target.value); // Обновляем состояние taskInput на основе ввода пользователя\r\n    };\r\n\r\n    // Обработчик изменения даты в поле ввода дедлайна\r\n    const handleDeadlineChange = (e) => {\r\n        setDeadlineInput(e.target.value); // Обновляем состояние deadlineInput на основе ввода пользователя\r\n    };\r\n\r\n    // Функция добавления новой задачи\r\n    const addTask = () => {\r\n        if (taskInput.trim()) { // Проверяем, что введенный текст не пустой\r\n            setTasks([\r\n                ...tasks,\r\n                {\r\n                    id: Date.now(),\r\n                    text: taskInput,\r\n                    deadline: deadlineInput || 'Без дедлайна', // Если дедлайн не указан, устанавливаем значение по умолчанию\r\n                    completed: false,\r\n                },\r\n            ]); // Добавляем новую задачу в список\r\n            setTaskInput(''); // Очищаем поле ввода задачи после добавления\r\n            setDeadlineInput(''); // Очищаем поле ввода дедлайна после добавления\r\n        }\r\n    };\r\n\r\n    // Функция переключения состояния завершения задачи\r\n    const toggleTaskCompletion = (id) => {\r\n        setTasks(tasks.map(task =>\r\n            task.id === id ? { ...task, completed: !task.completed } : task // Меняем состояние completed для выбранной задачи\r\n        ));\r\n    };\r\n\r\n    // Функция удаления задачи из списка\r\n    const deleteTask = (id) => {\r\n        setTasks(tasks.filter(task => task.id !== id)); // Фильтруем задачи, оставляя только те, которые не были удалены\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <h1>Это страница личных заданий</h1>\r\n            {/* Используем компонент ввода задачи */}\r\n            <TaskInput\r\n                taskInput={taskInput}\r\n                deadlineInput={deadlineInput}\r\n                handleInputChange={handleInputChange}\r\n                handleDeadlineChange={handleDeadlineChange}\r\n                addTask={addTask}\r\n            />\r\n            <TaskList\r\n                tasks={tasks}\r\n                toggleTaskCompletion={toggleTaskCompletion}\r\n                deleteTask={deleteTask}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PersonalTasks;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAElC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACxC,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAChD,MAAM,CAACa,aAAa,EAAEC,gBAAgB,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAExD;EACA,MAAMe,iBAAiB,GAAIC,CAAC,IAAK;IAC7BJ,YAAY,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;EAClC,CAAC;;EAED;EACA,MAAMC,oBAAoB,GAAIH,CAAC,IAAK;IAChCF,gBAAgB,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;EACtC,CAAC;;EAED;EACA,MAAME,OAAO,GAAGA,CAAA,KAAM;IAClB,IAAIT,SAAS,CAACU,IAAI,CAAC,CAAC,EAAE;MAAE;MACpBX,QAAQ,CAAC,CACL,GAAGD,KAAK,EACR;QACIa,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;QACdC,IAAI,EAAEd,SAAS;QACfe,QAAQ,EAAEb,aAAa,IAAI,cAAc;QAAE;QAC3Cc,SAAS,EAAE;MACf,CAAC,CACJ,CAAC,CAAC,CAAC;MACJf,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC;MAClBE,gBAAgB,CAAC,EAAE,CAAC,CAAC,CAAC;IAC1B;EACJ,CAAC;;EAED;EACA,MAAMc,oBAAoB,GAAIN,EAAE,IAAK;IACjCZ,QAAQ,CAACD,KAAK,CAACoB,GAAG,CAACC,IAAI,IACnBA,IAAI,CAACR,EAAE,KAAKA,EAAE,GAAG;MAAE,GAAGQ,IAAI;MAAEH,SAAS,EAAE,CAACG,IAAI,CAACH;IAAU,CAAC,GAAGG,IAAI,CAAC;IACpE,CAAC,CAAC;EACN,CAAC;;EAED;EACA,MAAMC,UAAU,GAAIT,EAAE,IAAK;IACvBZ,QAAQ,CAACD,KAAK,CAACuB,MAAM,CAACF,IAAI,IAAIA,IAAI,CAACR,EAAE,KAAKA,EAAE,CAAC,CAAC,CAAC,CAAC;EACpD,CAAC;EAED,oBACIlB,OAAA,CAAAE,SAAA;IAAA2B,QAAA,gBACI7B,OAAA;MAAA6B,QAAA,EAAI;IAA2B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEpCjC,OAAA,CAACH,SAAS;MACNU,SAAS,EAAEA,SAAU;MACrBE,aAAa,EAAEA,aAAc;MAC7BE,iBAAiB,EAAEA,iBAAkB;MACrCI,oBAAoB,EAAEA,oBAAqB;MAC3CC,OAAO,EAAEA;IAAQ;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC,eACFjC,OAAA,CAACF,QAAQ;MACLO,KAAK,EAAEA,KAAM;MACbmB,oBAAoB,EAAEA,oBAAqB;MAC3CG,UAAU,EAAEA;IAAW;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC;EAAA,eACJ,CAAC;AAEX,CAAC;AAAC7B,EAAA,CA9DID,aAAa;AAAA+B,EAAA,GAAb/B,aAAa;AAgEnB,eAAeA,aAAa;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}