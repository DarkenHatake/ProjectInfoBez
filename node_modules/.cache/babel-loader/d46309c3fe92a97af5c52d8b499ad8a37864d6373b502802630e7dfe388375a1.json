{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KalderAA\\\\task\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './styles/App.css';\nimport TaskInput from './components/TaskInput';\nimport TaskList from './components/TaskList';\n\n// Главный компонент приложения\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [tasks, setTasks] = useState([]); // Состояние для хранения списка задач\n  const [taskInput, setTaskInput] = useState(''); // Состояние для хранения текста новой задачи\n\n  // Обработчик изменения текста в поле ввода\n  const handleInputChange = e => {\n    setTaskInput(e.target.value); // Обновляем состояние taskInput на основе ввода пользователя\n  };\n\n  // Функция добавления новой задачи\n  const addTask = () => {\n    if (taskInput.trim()) {\n      // Проверяем, что введенный текст не пустой\n      setTasks([...tasks, {\n        id: Date.now(),\n        text: taskInput,\n        completed: false\n      }]); // Добавляем новую задачу в список\n      setTaskInput(''); // Очищаем поле ввода после добавления задачи\n    }\n  };\n\n  // Функция переключения состояния завершения задачи\n  const toggleTaskCompletion = id => {\n    setTasks(tasks.map(task => task.id === id ? {\n      ...task,\n      completed: !task.completed\n    } : task // Меняем состояние completed для выбранной задачи\n    ));\n  };\n\n  // Функция удаления задачи из списка\n  const deleteTask = id => {\n    setTasks(tasks.filter(task => task.id !== id)); // Фильтруем задачи, оставляя только те, которые не были удалены\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u041F\\u043B\\u0430\\u043D\\u0438\\u0440\\u043E\\u0432\\u0449\\u0438\\u043A \\u0437\\u0430\\u0434\\u0430\\u0447\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TaskInput, {\n      taskInput: taskInput,\n      handleInputChange: handleInputChange,\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), \"   \", /*#__PURE__*/_jsxDEV(TaskList, {\n      tasks: tasks,\n      toggleTaskCompletion: toggleTaskCompletion,\n      deleteTask: deleteTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"fc089a2pWZ6eDK9yPJPsKtIInrI=\");\n_c = App;\nexport default App; // Экспортируем главный компонент приложения\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","TaskInput","TaskList","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","taskInput","setTaskInput","handleInputChange","e","target","value","addTask","trim","id","Date","now","text","completed","toggleTaskCompletion","map","task","deleteTask","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/KalderAA/task/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './styles/App.css';\nimport TaskInput from './components/TaskInput';\nimport TaskList from './components/TaskList';\n\n// Главный компонент приложения\nconst App = () => {\n    const [tasks, setTasks] = useState([]); // Состояние для хранения списка задач\n    const [taskInput, setTaskInput] = useState(''); // Состояние для хранения текста новой задачи\n\n    // Обработчик изменения текста в поле ввода\n    const handleInputChange = (e) => {\n        setTaskInput(e.target.value); // Обновляем состояние taskInput на основе ввода пользователя\n    };\n\n    // Функция добавления новой задачи\n    const addTask = () => {\n        if (taskInput.trim()) { // Проверяем, что введенный текст не пустой\n            setTasks([...tasks, { id: Date.now(), text: taskInput, completed: false }]); // Добавляем новую задачу в список\n            setTaskInput(''); // Очищаем поле ввода после добавления задачи\n        }\n    };\n\n    // Функция переключения состояния завершения задачи\n    const toggleTaskCompletion = (id) => {\n        setTasks(tasks.map(task =>\n            task.id === id ? { ...task, completed: !task.completed } : task // Меняем состояние completed для выбранной задачи\n        ));\n    };\n\n    // Функция удаления задачи из списка\n    const deleteTask = (id) => {\n        setTasks(tasks.filter(task => task.id !== id)); // Фильтруем задачи, оставляя только те, которые не были удалены\n    };\n\n    return (\n        <div className=\"app\">\n            <h1>Планировщик задач</h1>\n            {/* Используем компонент ввода задачи */}\n            <TaskInput\n                taskInput={taskInput}\n                handleInputChange={handleInputChange}\n                addTask={addTask}\n            />   {/* Используем компонент списка задач */}\n            <TaskList\n                tasks={tasks}\n                toggleTaskCompletion={toggleTaskCompletion}\n                deleteTask={deleteTask}\n            />\n        </div>\n    );\n};\n\nexport default App; // Экспортируем главный компонент приложения"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,kBAAkB;AACzB,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,QAAQ,MAAM,uBAAuB;;AAE5C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACd,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACxC,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAEhD;EACA,MAAMW,iBAAiB,GAAIC,CAAC,IAAK;IAC7BF,YAAY,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;EAClC,CAAC;;EAED;EACA,MAAMC,OAAO,GAAGA,CAAA,KAAM;IAClB,IAAIN,SAAS,CAACO,IAAI,CAAC,CAAC,EAAE;MAAE;MACpBR,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAE;QAAEU,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;QAAEC,IAAI,EAAEX,SAAS;QAAEY,SAAS,EAAE;MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;MAC7EX,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC;IACtB;EACJ,CAAC;;EAED;EACA,MAAMY,oBAAoB,GAAIL,EAAE,IAAK;IACjCT,QAAQ,CAACD,KAAK,CAACgB,GAAG,CAACC,IAAI,IACnBA,IAAI,CAACP,EAAE,KAAKA,EAAE,GAAG;MAAE,GAAGO,IAAI;MAAEH,SAAS,EAAE,CAACG,IAAI,CAACH;IAAU,CAAC,GAAGG,IAAI,CAAC;IACpE,CAAC,CAAC;EACN,CAAC;;EAED;EACA,MAAMC,UAAU,GAAIR,EAAE,IAAK;IACvBT,QAAQ,CAACD,KAAK,CAACmB,MAAM,CAACF,IAAI,IAAIA,IAAI,CAACP,EAAE,KAAKA,EAAE,CAAC,CAAC,CAAC,CAAC;EACpD,CAAC;EAED,oBACIb,OAAA;IAAKuB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAChBxB,OAAA;MAAAwB,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE1B5B,OAAA,CAACH,SAAS;MACNQ,SAAS,EAAEA,SAAU;MACrBE,iBAAiB,EAAEA,iBAAkB;MACrCI,OAAO,EAAEA;IAAQ;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC,OAAG,eACL5B,OAAA,CAACF,QAAQ;MACLK,KAAK,EAAEA,KAAM;MACbe,oBAAoB,EAAEA,oBAAqB;MAC3CG,UAAU,EAAEA;IAAW;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAAC1B,EAAA,CA7CID,GAAG;AAAA4B,EAAA,GAAH5B,GAAG;AA+CT,eAAeA,GAAG,CAAC,CAAC;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}