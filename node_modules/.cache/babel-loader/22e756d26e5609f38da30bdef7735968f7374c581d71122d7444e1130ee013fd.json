{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KalderAA\\\\task\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './styles/App.css';\nimport TaskInput from './components/TaskInput';\nimport TaskList from './components/TaskList';\nimport Navigation from './components/Navigation'; // Импортируем компонент навигации\n\n// Главный компонент приложения\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [tasks, setTasks] = useState([]); // Состояние для хранения списка задач\n  const [taskInput, setTaskInput] = useState(''); // Состояние для хранения текста новой задачи\n  const [deadlineInput, setDeadlineInput] = useState(''); // Состояние для хранения дедлайна новой задачи\n\n  // Обработчик изменения текста в поле ввода задачи\n  const handleInputChange = e => {\n    setTaskInput(e.target.value); // Обновляем состояние taskInput на основе ввода пользователя\n  };\n\n  // Обработчик изменения даты в поле ввода дедлайна\n  const handleDeadlineChange = e => {\n    setDeadlineInput(e.target.value); // Обновляем состояние deadlineInput на основе ввода пользователя\n  };\n\n  // Функция добавления новой задачи\n  const addTask = () => {\n    if (taskInput.trim()) {\n      // Проверяем, что введенный текст не пустой\n      setTasks([...tasks, {\n        id: Date.now(),\n        text: taskInput,\n        deadline: deadlineInput || 'Без дедлайна',\n        // Если дедлайн не указан, устанавливаем значение по умолчанию\n        completed: false\n      }]); // Добавляем новую задачу в список\n      setTaskInput(''); // Очищаем поле ввода задачи после добавления\n      setDeadlineInput(''); // Очищаем поле ввода дедлайна после добавления\n    }\n  };\n\n  // Функция переключения состояния завершения задачи\n  const toggleTaskCompletion = id => {\n    setTasks(tasks.map(task => task.id === id ? {\n      ...task,\n      completed: !task.completed\n    } : task // Меняем состояние completed для выбранной задачи\n    ));\n  };\n\n  // Функция удаления задачи из списка\n  const deleteTask = id => {\n    setTasks(tasks.filter(task => task.id !== id)); // Фильтруем задачи, оставляя только те, которые не были удалены\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u041B\\u0438\\u0447\\u043D\\u044B\\u0435 \\u0437\\u0430\\u0434\\u0430\\u0447\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TaskInput, {\n      taskInput: taskInput,\n      deadlineInput: deadlineInput // Передаем состояние дедлайна в TaskInput\n      ,\n      handleInputChange: handleInputChange,\n      handleDeadlineChange: handleDeadlineChange // Передаем обработчик изменения дедлайна\n      ,\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n      tasks: tasks,\n      toggleTaskCompletion: toggleTaskCompletion,\n      deleteTask: deleteTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"tdQicyssE21TtFHSIF2bkRJ8+UI=\");\n_c = App;\nexport default App; // Экспортируем главный компонент приложения\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","TaskInput","TaskList","Navigation","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","taskInput","setTaskInput","deadlineInput","setDeadlineInput","handleInputChange","e","target","value","handleDeadlineChange","addTask","trim","id","Date","now","text","deadline","completed","toggleTaskCompletion","map","task","deleteTask","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/KalderAA/task/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './styles/App.css';\nimport TaskInput from './components/TaskInput';\nimport TaskList from './components/TaskList';\nimport Navigation from './components/Navigation'; // Импортируем компонент навигации\n\n// Главный компонент приложения\nconst App = () => {\n    const [tasks, setTasks] = useState([]); // Состояние для хранения списка задач\n    const [taskInput, setTaskInput] = useState(''); // Состояние для хранения текста новой задачи\n    const [deadlineInput, setDeadlineInput] = useState(''); // Состояние для хранения дедлайна новой задачи\n\n    // Обработчик изменения текста в поле ввода задачи\n    const handleInputChange = (e) => {\n        setTaskInput(e.target.value); // Обновляем состояние taskInput на основе ввода пользователя\n    };\n\n    // Обработчик изменения даты в поле ввода дедлайна\n    const handleDeadlineChange = (e) => {\n        setDeadlineInput(e.target.value); // Обновляем состояние deadlineInput на основе ввода пользователя\n    };\n\n    // Функция добавления новой задачи\n    const addTask = () => {\n        if (taskInput.trim()) { // Проверяем, что введенный текст не пустой\n            setTasks([\n                ...tasks,\n                {\n                    id: Date.now(),\n                    text: taskInput,\n                    deadline: deadlineInput || 'Без дедлайна', // Если дедлайн не указан, устанавливаем значение по умолчанию\n                    completed: false,\n                },\n            ]); // Добавляем новую задачу в список\n            setTaskInput(''); // Очищаем поле ввода задачи после добавления\n            setDeadlineInput(''); // Очищаем поле ввода дедлайна после добавления\n        }\n    };\n\n    // Функция переключения состояния завершения задачи\n    const toggleTaskCompletion = (id) => {\n        setTasks(tasks.map(task =>\n            task.id === id ? { ...task, completed: !task.completed } : task // Меняем состояние completed для выбранной задачи\n        ));\n    };\n\n    // Функция удаления задачи из списка\n    const deleteTask = (id) => {\n        setTasks(tasks.filter(task => task.id !== id)); // Фильтруем задачи, оставляя только те, которые не были удалены\n    };\n\n    return (\n        <div className=\"app\">\n            <Navigation /> {/* Добавляем компонент навигации */}\n            <h1>Личные задачи</h1>\n            {/* Используем компонент ввода задачи */}\n            <TaskInput\n                taskInput={taskInput}\n                deadlineInput={deadlineInput} // Передаем состояние дедлайна в TaskInput\n                handleInputChange={handleInputChange}\n                handleDeadlineChange={handleDeadlineChange} // Передаем обработчик изменения дедлайна\n                addTask={addTask}\n            />\n            {/* Используем компонент списка задач */}\n            <TaskList\n                tasks={tasks}\n                toggleTaskCompletion={toggleTaskCompletion}\n                deleteTask={deleteTask}\n            />\n        </div>\n    );\n};\n\nexport default App; // Экспортируем главный компонент приложения\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}